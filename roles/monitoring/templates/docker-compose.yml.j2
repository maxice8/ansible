services:
  ts-grafana:
    image: tailscale/tailscale:latest
    hostname: grafana
    container_name: ts-grafana
    networks:
      - net
    environment:
      - TS_AUTHKEY={{ container_tsclient_key }}?ephemeral=false
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/serve-grafana.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - tailscale-data-grafana:/var/lib/tailscale
      - /srv/monitoring/config:/config
    devices:
      - /dev/net/tun
    cap_add:
      - net_admin
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    network_mode: service:ts-grafana
    volumes:
      - 'grafana-data:/var/lib/grafana'
      - /srv/monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      ts-grafana:
        condition: service_healthy

  ts-prometheus:
    image: tailscale/tailscale:latest
    hostname: prometheus
    container_name: ts-prometheus
    networks:
      - net
    environment:
      - TS_AUTHKEY={{ container_tsclient_key }}?ephemeral=false
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/serve-prometheus.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - tailscale-data-prometheus:/var/lib/tailscale
      - /srv/monitoring/config:/config
    devices:
      - /dev/net/tun
    cap_add:
      - net_admin
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "tailscale status"]
      interval: 1s
      timeout: 5s
      retries: 60
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    network_mode: service:ts-prometheus
    volumes:
      - prometheus-data:/prometheus
      - /srv/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /srv/monitoring/prometheus/rules:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      ts-prometheus:
        condition: service_healthy
  
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    network_mode: service:prometheus
    depends_on:
      - prometheus
    volumes:
      - alertmanager-data:/alertmanager
      - /srv/monitoring/prometheus/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    networks:
      - net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    volumes:
      - /var/log:/var/log:ro
      - ./promtail-config.yaml:/etc/promtail/config.yaml:ro
    command:
      - -config.file=/etc/promtail/config.yaml
    networks:
      - net
    depends_on:
      - loki

volumes:
  grafana-data:
  prometheus-data:
  alertmanager-data:
  tailscale-data-grafana:
  tailscale-data-prometheus:

networks:
  net:
    driver: bridge