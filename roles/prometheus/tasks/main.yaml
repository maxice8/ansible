---
- name: Create docker-compose directory for prometheus
  ansible.builtin.file:
    owner: root
    group: root
    mode: '0755'
    state: directory
    path: /srv/prometheus

- name: Copy docker-compose files to /srv/prometheus
  ansible.builtin.copy:
    owner: root
    group: root
    mode: '0644'
    dest: /srv/prometheus/
    src: docker-compose.yml

- name: Copy custom Prometheus config using Jinja templating
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /srv/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'

- name: Copy alertManager config using Jinja templating
  ansible.builtin.template:
    owner: prometheus
    group: prometheus
    mode: '0644'
    src: config.yml.j2
    dest: /srv/prometheus/config.yml
  notify: Restart Prometheus

- name: Create prometheus rules directory
  ansible.builtin.file:
    owner: root
    group: root
    mode: "0755"
    path: /srv/prometheus/rules
    state: directory

- name: Add node-exporter alerts for prometheus
  ansible.builtin.get_url:
    owner: root
    group: root
    mode: '0644'
    url: https://raw.githubusercontent.com/samber/awesome-prometheus-alerts/master/dist/rules/host-and-hardware/node-exporter.yml
    dest: /srv/prometheus/rules/
  notify: Restart Prometheus

- name: Add cAdvisor alerts for prometheus
  ansible.builtin.copy:
    owner: root
    group: root
    mode: '0644'
    src: google-cadvisor.yml
    dest: /srv/prometheus/rules/
  notify: Restart Prometheus

- name: Enable prometheus docker
  community.docker.docker_compose_v2:
    project_src: /srv/prometheus
    wait: true
    wait_timeout: 90

- name: Expose prometheus over tailscale on port 9001
  ansible.builtin.command: tailscale serve --bg --https=9001 https+insecure://127.0.0.1:9001
  register: tailscale_serve_output
  failed_when: tailscale_serve_output.rc != 0
  changed_when: true
  # Here we access Web.<hostname>.<tailnet_name>.ts.net:<tailscale-port>.Handlers./.Proxy
  # and check if matches http://127.0.0.1:<service-port>
  when: >
    tailscale_active and
    tailscale_serve_status.Web.get(
      ansible_facts['hostname'] ~ '.' ~ tailnet_name ~ '.ts.net:9001',
      {}
    ).get(
      'Handlers',
      {}
    ).get(
      '/',
      {}
    ).get('Proxy', '') != 'https+insecure://127.0.0.1:9001'
