---
- name: Install prerequisites (ca-certificates, curl) and update apt cache
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: true

- name: Create directory for Docker keyring
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker's GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    checksum: sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570

- name: Add Docker repository
  ansible.builtin.copy:
    owner: root
    group: root
    mode: '0644'
    content: |
      deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    dest: /etc/apt/sources.list.d/docker.list

- name: Install Docker packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Create docker group if it doesn't exist
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ docker_username }}"
    groups: docker
    append: true
  when: docker_username != ""

- name: Create daemon.json configuration
  ansible.builtin.template:
    owner: root
    group: root
    mode: '0644'
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: Restart Docker

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present
    persistent: present

- name: Setup sysctl value of {{ item }}
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: 1
    state: present
    sysctl_set: true
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Enable the docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Enable the containerd service
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: true

- name: Create systemd timer to prune images
  ansible.builtin.import_tasks:
    file: docker-system-prune.yaml
